#!/bin/bash

app="menu"
domain=$1
path=$2


# Check domain/path availability
sudo yunohost app checkurl $domain$path -a $app
if [[ ! $? -eq 0 ]]; then
    exit 1
fi

# Create database
db_pwd=$(dd if=/dev/urandom bs=1 count=200 2> /dev/null | tr -c -d '[A-Za-z0-9]' | sed -n 's/\(.\{24\}\).*/\1/p')
db_user=$app
sudo yunohost app initdb $db_user -p $db_pwd
sudo yunohost app setting $app mysqlpwd -v $db_pwd

# Db installation
mysql -u $db_user -p$db_pwd $db_user < ../conf/create-mysql.sql

# Copy files to the right place
final_path=/var/www/$app
sudo mkdir -p $final_path
sed -i "s@YUNOPATH@//$domain$path/@g" ../sources/menu/nav2.js
sudo cp -a ../sources/menu/* $final_path
sudo chown -R www-data: $final_path

# Setup the admin web plugin
sudo cp -a ../sources/adminjs/menu /usr/share/yunohost/admin/modules/

# Setup the cli/api plugin
sudo cp -a ../sources/moulinette/actionsmap/ynh_$app.yml /usr/share/moulinette/actionsmap/
sudo mkdir /usr/lib/moulinette/ynh_$app
sudo cp -a ../sources/moulinette/*.py /usr/lib/moulinette/ynh_$app/
sudo cp -a ../sources/moulinette/locales /usr/lib/moulinette/ynh_$app/

# Setup dependence
sudo apt-get -y install python-mysqldb

# Modify Nginx configuration file and copy it to Nginx conf directory
sed -i "s@PATHTOCHANGE@$path@g" ../conf/nginx.conf
sed -i "s@ALIASTOCHANGE@$final_path/@g" ../conf/nginx.conf
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf

# Reload Nginx and regenerate SSOwat conf
sudo service nginx reload
sudo yunohost app setting $app skipped_uris -v "/"  
sudo yunohost app ssowatconf
